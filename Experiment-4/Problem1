create program to collect and store all the cards to assist the users in finding all the cards in a given symbol using collection interface.
CODE:-
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

class Card {
    private String symbol; // e.g., Hearts, Diamonds, Clubs, Spades
    private String value;  // e.g., 2, 3, 4, ..., 10, J, Q, K, A

    public Card(String symbol, String value) {
        this.symbol = symbol;
        this.value = value;
    }

    public String getSymbol() {
        return symbol;
    }

    public String getValue() {
        return value;
    }

    @Override
    public String toString() {
        return value + " of " + symbol;
    }
}

public class CardCollection {
    private Collection<Card> cards;

    public CardCollection() {
        cards = new ArrayList<>();
    }

    public void addCard(Card card) {
        cards.add(card);
        System.out.println("Card added: " + card);
    }

    public List<Card> findCardsBySymbol(String symbol) {
        List<Card> foundCards = new ArrayList<>();
        for (Card card : cards) {
            if (card.getSymbol().equalsIgnoreCase(symbol)) {
                foundCards.add(card);
            }
        }
        return foundCards;
    }

    public void displayAllCards() {
        if (cards.isEmpty()) {
            System.out.println("No cards in the collection.");
        } else {
            System.out.println("All Cards:");
            for (Card card : cards) {
                System.out.println(card);
            }
        }
    }

    public static void main(String[] args) {
        CardCollection cardCollection = new CardCollection();
        Scanner scanner = new Scanner(System.in);
        int choice;

        do {
            System.out.println("\nCard Management System");
            System.out.println("1. Add Card");
            System.out.println("2. Find Cards by Symbol");
            System.out.println("3. Display All Cards");
            System.out.println("4. Exit");
            System.out.print("Enter your choice: ");
            choice = scanner.nextInt();
            scanner.nextLine(); // Consume newline

            switch (choice) {
                case 1:
                    System.out.print("Enter Card Symbol (e.g., Hearts, Diamonds): ");
                    String symbol = scanner.nextLine();
                    System.out.print("Enter Card Value (e.g., 2, 3, J, Q, K, A): ");
                    String value = scanner.nextLine();
                    cardCollection.addCard(new Card(symbol, value));
                    break;
                case 2:
                    System.out.print("Enter Symbol to find cards (e.g., Hearts, Diamonds): ");
                    String searchSymbol = scanner.nextLine();
                    List<Card> foundCards = cardCollection.findCardsBySymbol(searchSymbol);
                    if (foundCards.isEmpty()) {
                        System.out.println("No cards found for symbol: " + searchSymbol);
                    } else {
                        System.out.println("Found Cards:");
                        for (Card card : foundCards) {
                            System.out.println(card);
                        }
                    }
                    break;
                case 3:
                    cardCollection.displayAllCards();
                    break;
                case 4:
                    System.out.println("Exiting...");
                    break;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        } while (choice != 4);

        scanner.close();
    }
}

OUTPUT:-
Card Management System
1. Add Card
2. Find Cards by Symbol
3. Display All Cards
4. Exit
Enter your choice: 
